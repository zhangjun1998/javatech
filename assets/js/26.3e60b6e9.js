(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{263:function(e,t,r){"use strict";r.r(t);var a=r(2),l=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"模板引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模板引擎"}},[e._v("#")]),e._v(" 模板引擎")]),e._v(" "),r("p",[e._v("模板引擎不属于特定技术领域，它是跨领域跨平台的概念。 模板引擎的作用就是分离业务数据和最终呈现内容，它可以生成特定格式的文档（模板） 。")]),e._v(" "),r("p",[e._v("模板引擎简单来说，就是：***"),r("code",[e._v("模板 + 数据模型 = 输出")]),e._v("***")]),e._v(" "),r("p",[e._v("较早，也比较经典的模板引擎是 JavaEE 的标准技术 JSP。")]),e._v(" "),r("p",[e._v("但 JSP 存在以下缺点，导致逐渐被淘汰：")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("性能差")]),e._v(" "),r("ul",[r("li",[e._v("JSP 本质上是 Servlet，第一次请求 JSP 页面，必须要在 web 服务器中编译成 servlet，所以第一次响应较慢。")]),e._v(" "),r("li",[e._v("每次请求 JSP 都是访问servlet再用输出流输出的html页面。")]),e._v(" "),r("li",[e._v("JSP中的内容很多，页面响应会很慢，因为是同步加载。")])])]),e._v(" "),r("li",[r("strong",[e._v("无法前后端分离")]),e._v(" "),r("ul",[r("li",[e._v("动态资源和静态资源全部耦合在一起，无法做到前后端分离。一旦服务器出现状况，前后台一起玩完。")]),e._v(" "),r("li",[e._v("而且 Java 工程师既当爹又当妈，又要维护 Java 代码，又要维护 JSP 代码，痛苦。")]),e._v(" "),r("li",[e._v("前端工程师如果不理解 JSP 语法，面对各种 JSP 标签、表达式、指令，会一脸懵逼，痛苦。")])])]),e._v(" "),r("li",[r("strong",[e._v("不是所有服务器都支持")]),e._v(" - JSP 必须要在支持 JSP 技术的 web 服务器里运行（如 Tomcat）。但有些服务器则不支持 JSP ，如 Nginx。")])]),e._v(" "),r("p",[e._v("在 Java 领域，目前最常见的模板引擎就是：")]),e._v(" "),r("ul",[r("li",[e._v("Freemark")]),e._v(" "),r("li",[e._v("Thymeleaf")]),e._v(" "),r("li",[e._v("Velocity")])]),e._v(" "),r("h2",{attrs:{id:"内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[e._v("#")]),e._v(" 内容")]),e._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/lib/template/freemark.html"}},[e._v("Freemark")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/lib/template/thymeleaf.html"}},[e._v("Thymeleaf")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/lib/template/velocity.html"}},[e._v("Velocity")])],1)]),e._v(" "),r("h2",{attrs:{id:"资源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#资源"}},[e._v("#")]),e._v(" 资源")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Freemark")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/apache/freemarker/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Freemark Github"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://freemarker.foofun.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Freemark 中文教程"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://try.freemarker.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("在线 Freemark 工具"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("strong",[e._v("Velocity")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/apache/velocity-engine/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Velocity Github"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://velocity.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Velocity 官网"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://wizardforcel.gitbooks.io/velocity-doc/content/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Velocity 中文文档"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/alibaba/velocity-spring-boot-project",target:"_blank",rel:"noopener noreferrer"}},[e._v("velocity-spring-boot-project"),r("OutboundLink")],1)])])])])])}),[],!1,null,null,null);t.default=l.exports}}]);